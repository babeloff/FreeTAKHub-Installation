---
- name: Ensure nodered group exists
  tags: nodered
  group:
    name: nodered
    state: present

- name: Ensure nodered user is in nodered group
  tags: nodered
  user:
    name: nodered
    group: nodered

- name: Restart NodeRed Unit
  tags: nodered
  ansible.builtin.systemd_service:
    state: restarted
    daemon_reload: true
    name: nodered

- name: Wait for NodeRed service to start
  tags: nodered
  uri:
    url: http://{{ noderedserver_ipv4 }}:{{ noderedserver_port }}
    status_code: 200
    timeout: 5
  register: nodered_service_status
  # Keep trying for 30 seconds in 5 sec intervals
  retries: 6
  delay: 5
  until: >
     'status' in nodered_service_status and
     nodered_service_status['status'] == 200

- name: Clone FreeTAKHub_VideoChecker repository
  tags: nodered
  shell: git clone https://github.com/FreeTAKTeam/FreeTAKHub_VideoChecker.git

- name: Clone FreeTAKHub_SALUTE repository
  tags: nodered
  shell: git clone https://github.com/FreeTAKTeam/FreeTAKHub_Forms_SALUTE.git

- name: Clone FreeTAKHub_Webmap repository
  tags: nodered
  shell: git clone https://github.com/FreeTAKTeam/FreeTAKHub-Webmap.git

# - name: Clone FreeTAKHub_VideoChecker repository
#   tags: nodered
#   git:
#     repo: 'https://github.com/FreeTAKTeam/FreeTAKHub_VideoChecker.git'
#     dest: '{{ playbook_dir }}'
#     force: true
#     clone: yes
#     update: yes

- name: Authenticate to NodeRed Admin API
  tags: nodered
  uri:
    url: "http://{{ noderedserver_ipv4 }}:{{ noderedserver_port }}/auth/token"
    method: POST
    headers:
      Content-Type: application/json
    body:
      client_id: node-red-admin
      grant_type: password
      scope: "*"
      username: "{{ nodered_username }}"
      password: "{{ nodered_password }}"
    body_format: json
    status_code: 200
  register: get_nodered_auth_output

- name: Make available NodeRed Admin Token
  tags: nodered
  set_fact: nodered_admin_token="{{ get_nodered_auth_output.json.access_token }}"

- name: Import Node-RED flows
  tags: nodered
  block:
    - name: Wait until Node-RED import port is open
      wait_for:
        port: "{{ noderedserver_port }}"

#    - name: Import Node-RED flows via HTTP POST
#      uri:
#        url: "http://{{ noderedserver_ipv4 }}:{{ noderedserver_port }}/flows"
#        method: POST
#        headers:
#          Content-Type: application/json
#          Node-RED-API-Version: v1
#          Node-RED-Deployment-Type: full
#          Authorization: Bearer {{ nodered_admin_token }}
#        body: "{{ nodered_post_flows_body }}"
#        body_format: json
#        status_code: 204

#    - name: Import Node-RED SALUTE flow via HTTP POST
#      uri:
#        url: "http://{{ noderedserver_ipv4 }}:{{ noderedserver_port }}/flow"
#        method: POST
#        headers:
#          Content-Type: application/json
#          Node-RED-API-Version: v1
#          Node-RED-Deployment-Type: full
#          Authorization: Bearer {{ nodered_admin_token }}
#        body: "{{ nodered_post_flow_salute }}"
#        body_format: json
#        status_code: 200

    - name: Import Node-RED FTH Config flow via HTTP POST
      uri:
        url: "http://{{ noderedserver_ipv4 }}:{{ noderedserver_port }}/flow"
        method: POST
        headers:
          Content-Type: application/json
          Node-RED-API-Version: v1
          Node-RED-Deployment-Type: full
          Authorization: Bearer {{ nodered_admin_token }}
        body: "{{ lookup('file', playbook_dir + '/FreeTAKHub-Webmap/freetakhub_config.json') }}"
        body_format: json
        status_code: 200

    - name: Import FTH Videochecker flow via HTTP POST
      uri:
        url: "http://{{ noderedserver_ipv4 }}:{{ noderedserver_port }}/flow"
        method: POST
        headers:
          Content-Type: application/json
          Node-RED-API-Version: v1
          Node-RED-Deployment-Type: full
          Authorization: Bearer {{ nodered_admin_token }}
        body: "{{ lookup('file', playbook_dir + '/FreeTAKHub_VideoChecker/freetakhub_videochecker.json') }}"
        body_format: json
        status_code: 200

    - name: Import FTH SALUTE flow via HTTP POST
      uri:
        url: "http://{{ noderedserver_ipv4 }}:{{ noderedserver_port }}/flow"
        method: POST
        headers:
          Content-Type: application/json
          Node-RED-API-Version: v1
          Node-RED-Deployment-Type: full
          Authorization: Bearer {{ nodered_admin_token }}
        body: "{{ lookup('file', playbook_dir + '/FreeTAKHub_Forms_SALUTE/freetakhub_salute.json') }}"
        body_format: json
        status_code: 200

    - name: Import FTH Webmap flow via HTTP POST
      uri:
        url: "http://{{ noderedserver_ipv4 }}:{{ noderedserver_port }}/flow"
        method: POST
        headers:
          Content-Type: application/json
          Node-RED-API-Version: v1
          Node-RED-Deployment-Type: full
          Authorization: Bearer {{ nodered_admin_token }}
        body: "{{ lookup('file', playbook_dir + '/FreeTAKHub-Webmap/freetakhub_webmap.json') }}"
        body_format: json
        status_code: 200

#    - name: Import Node-RED Videochecker flow via HTTP POST
#      uri:
#        url: "http://{{ noderedserver_ipv4 }}:{{ noderedserver_port }}/flow"
#        method: POST
#        headers:
#          Content-Type: application/json
#          Node-RED-API-Version: v1
#          Node-RED-Deployment-Type: full
#          Authorization: Bearer {{ nodered_admin_token }}
#        body: "{{ nodered_post_flow_webmap }}"
#        body_format: json
#        status_code: 200

- name: Ensure reachable connection to Video Server
  tags: nodered
  block:
    - name: Wait for Video Server to be available
      wait_for:
        host: "{{ videoserver_ipv4 }}"
        port: 9997
        timeout: "{{ nodered_wait_for_videoserver_timeout | int }}"

    - name: Reload Node-RED flows
      uri:
        url: "http://{{ noderedserver_ipv4 }}:{{ noderedserver_port }}/flows"
        method: POST
        headers:
          Content-Type: application/json
          Node-RED-Deployment-Type: reload
          Node-RED-API-Version: v1
        body:
          flows: [{}]
        body_format: json
        status_code: 204

  when: nodered_wait_for_videoserver
...
